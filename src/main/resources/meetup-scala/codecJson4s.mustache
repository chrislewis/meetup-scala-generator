import org.json4s._
import org.json4s.native.Serialization
import com.meetup.json4s.JavaTimeSerializers

implicit val formats = Serialization.formats(NoTypeHints) ++ JavaTimeSerializers.defaults
  
implicit val {{classname}}Codec = new Codec[{{classname}}] {
  def encode(a: {{classname}}): JValue = Extraction.decompose(a)

  def decode(j: JValue): Either[String, {{classname}}] =
    try {
      Right(j.extract[{{classname}}])
    } catch {
      case scala.util.control.NonFatal(e) => Left(e.getMessage)
    }
}

implicit val {{classname}}ListCodec = new Codec[List[{{classname}}]] {
  def encode(a: List[{{classname}}]): JValue = Extraction.decompose(a)

  def decode(j: JValue): Either[String, List[{{classname}}]] =
    try {
      Right(j.extract[List[{{classname}}]])
    } catch {
      case scala.util.control.NonFatal(e) => Left(e.getMessage)
    }
}